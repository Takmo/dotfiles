---
- name: Upgrade Base System
  hosts: localhost
  tasks:

    - name: Upgrade Existing Fedora Packages
      when: ansible_facts['os_family'] == "RedHat"
      dnf:
        update_cache: true
        update_only: true

    - name: Upgrade Existing Pacman Packages
      when: ansible_facts['os_family'] == "Archlinux"
      pacman:
        update_cache: true
        upgrade: true

    - name: Upgrade Existing Homebrew Packages
      when: ansible_facts['os_family'] == "Darwin"
      homebrew:
        update_homebrew: true
        upgrade_all: true

- name: Install Packages
  hosts: localhost
  vars:
    packages: "elixir git neovim sudo tmux zsh"
  tasks:

    - name: Install Fedora Packages
      when: ansible_facts['os_family'] == "RedHat"
      dnf:
        name: "elixir, git, neovim, sudo, tmux, zsh"

    - name: Install Pacman Packages
      when: ansible_facts['os_family'] == "Archlinux"
      pacman:
        name: "{{packages}} python-neovim"

    - name: Install Homebrew Packages
      when: ansible_facts['os_family'] == "Darwin"
      homebrew:
        name: "{{packages}} python-neovim"

- name: Customize Home Directory
  hosts: localhost
  become: true
  vars:
    username: "randall"
  tasks:

    - name: Passwordless Sudo for Wheel
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Create User in Wheel
      user:
        create_home: true
        name: "{{username}}"
        shell: "/bin/zsh"
        groups: wheel

    - name: Clone Dotfiles
      become_user: "{{username}}"
      git:
        repo: https://github.com/Takmo/dotfiles.git
        dest: "/home/{{username}}/dotfiles"

    - name: Create Dotfile Directories
      become_user: "{{username}}"
      file:
        state: directory
        recurse: true
        path: "/home/{{username}}/{{item}}"
      with_items:
        - ".config/nvim"
        - ".ssh"

    - name: Link to Dotfiles
      become_user: "{{username}}"
      file:
        state: link
        force: true
        path: "/home/{{username}}/{{item}}"
        src: "/home/{{username}}/dotfiles/{{item}}"
      with_items:
        - ".config/nvim/init.vim"
        - ".tmux.conf"
        - ".vimrc"
        - ".zshrc"

    - name: Download SSH Keys
      become_user: "{{username}}"
      get_url:
        url: "https://github.com/Takmo.keys"
        dest: "/home/{{username}}/.ssh/authorized_keys"

    - name: Install Node Version Manager
      shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | zsh
      args:
        creates: "/home/{{username}}/.nvm/nvm.sh"

# shamelessly stolen: https://github.com/vitalk/ansible-secure-ssh/
- name: Lockdown SSH
  hosts: localhost
  vars:
    sshd_config: "/etc/ssh/sshd_config"
  tasks:

    - name: Disable empty password login
      lineinfile: dest={{ sshd_config }} regexp="^#?PermitEmptyPasswords" line="PermitEmptyPasswords no"

    - name: Disable remote root login
      lineinfile: dest={{ sshd_config }} regexp="^#?PermitRootLogin" line="PermitRootLogin no"

    - name: Disable password login
      lineinfile: dest={{ sshd_config }} regexp="^(#\s*)?PasswordAuthentication " line="PasswordAuthentication no"

    - name: Restart SSH
      service: name=sshd state=restarted
